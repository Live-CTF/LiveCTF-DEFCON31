#!/usr/bin/env python3

from pwn import *
import os
import subprocess
import sys
import base64


HOST = os.environ.get('HOST', 'localhost')
PORT = 31337
p = remote(HOST, PORT) 
# p = process('./challenge', cwd='../handout', env={'FLAG': 'LiveCTF{xxxxxxxxx}', 'LOCAL': '1'})



# filename=sys.argv[1]

def aeg_file(filename):

    with open(filename, 'rb') as f:
        raw=bytearray(f.read())

    ses = b'\x6a\x0b\x59'
    assert raw.count(ses)==1
    pos = raw.index(ses)+8
    raw[pos:pos+2]=b'\xeb\xfe'

    try:
        os.remove('/tmp/test.elf')
    except Exception:
        pass
    with open('/tmp/test.elf','wb') as f:
        f.write(raw)
    os.chmod('/tmp/test.elf',0o755)

    with subprocess.Popen(['/tmp/test.elf'],stdin=subprocess.PIPE) as p:
        p.stdin.write(b'0'*32+b'\n')
        p.stdin.flush()
        pid = p.pid
        import time
        time.sleep(0.5)
        s = open('/proc/{:d}/maps'.format(pid)).read()

        map_file = [i for i in s.split('\n') if 'rwx' in i][0]
        print('map_file',map_file)
        start = int(map_file.split('-')[0],16)

        with open('/proc/{:d}/mem'.format(pid), 'rb') as f:
            f.seek(start)
            content = f.read(0x200)
        p.terminate()
        p.kill()
    import capstone as cs
    md=cs.Cs(cs.CS_ARCH_X86,cs.CS_MODE_64)

    v = []

    for i in md.disasm(content, 0x1000):
        if i.mnemonic == 'cmp':
            v.append(i.op_str.split()[-1])

    return (''.join(chr(int(i,0)) for i in v).strip())


for i in range(20):
    p.recvuntil(b'Crackme: ')
    binary = base64.b64decode(p.recvuntil(b'Password', drop=True).strip())
    with open('/tmp/a.elf', 'wb') as f:
        f.write(binary)
        f.flush()

    answer = aeg_file('/tmp/a.elf')
    p.sendline(answer)

# p.interactive()
# p.sendline(b'./submitter')
flag = p.recvline_contains(b'LiveCTF{').decode().strip()
log.info('Flag: %s', flag)